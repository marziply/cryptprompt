#!/usr/bin/ash

log() {
  local message="$1"

  echo $message
  echo $message >> /var/log/unlock.log
}

log_and_exit() {
  log $1

  exit 1
}

cut_list() {
  for i in `seq $2`; do
    echo $1 | cut -d : -f${i}
  done
}

unlock() {
  local crypt_dev="$1"
  local crypt_name="$2"
  local crypt_args="$3"
  local key_file="$4"
  local prompt_for_password=1
  local target_dev=`resolve_device $crypt_dev $rootdelay`

  crypt_open() {
    /sbin/cryptsetup open \
      $target_dev \
      $crypt_name \
      $crypt_args \
      $@
  }

  if [[ -z "$target_dev" ]]; then
    log_and_exit "Target device could not be found"
  fi

  if ! /sbin/cryptsetup isLuks $target_dev > /dev/null 2>&1; then
    log_and_exit "Target device is not LUKS encrypted"
  fi

  echo "${crypt_args}:${crypt_name}:${target_dev}" > /tmp/unlock/params

  if [[ -f $key_file ]]; then
    if crypt_open -d $key_file; then
      local prompt_for_password=0
    else
      log "Invalid key file, enter password to continue"
    fi
  fi

  if [[ $prompt_for_password -gt 0 ]]; then
    if ! /sbin/cryptprompt $target_dev $crypt_name $crypt_args; then
      if [[ ! -f /tmp/unlock/done ]]; then
        log "Interface failure, dropping to manual prompt"

        while ! crypt_open; do
          if [[ -f /tmp/unlock/done ]]; then
            break
          fi
        done
      fi
    fi
  fi

  if [[ ! -e "/dev/mapper/${crypt_name}" ]]; then
    log_and_exit "Password succeeded but ${crypt_name} creation failed"
  fi
}

mount_key_file() {
  local key_file="$1"
  local key_mount_dir="/kmnt"
  local key_args=(`cut_list $cryptkey 3`)

  if poll_device ${key_args[1]} $rootdelay; then
    case ${key_args[2]} in
      *[!0-9]*)
        mkdir $key_mount_dir
        mount -rt ${key_args[2]} ${key_args[1]} $key_mount_dir
        dd if="${key_mount_dir}/${key_args[3]}" of=$key_file
        umount $key_mount_dir
      ;;
      *)
        dd \
          of=$key_file \
          if=${key_args[1]} \
          skip=${key_args[2]} \
          count=${key_args[3]} \
          bs=1 \
          > /dev/null 2>&1
      ;;
    esac
  fi

  if [[ ! -f $key_file ]]; then
    log "Key file could not be opened, enter password to continue"
  fi
}

run_hook() {
  /sbin/modprobe -aq dm-crypt > /dev/null 2>&1

  local key_file="/key.bin"
  local mapper_dir="/sys/class/misc/device-mapper"
  local crypt_params=(`cut_list $cryptdevice 2`)
  local crypt_args=$cryptargs

  mkdir -p /dev/mapper /tmp/unlock

  if [[ ! -e $mapper_dir ]]; then
    log_and_exit "Device mapper directory not found"
  fi

  if [[ ! -e /dev/mapper/control ]]; then
    mknod /dev/mapper/control c `cat "${mapper_dir}/dev" | sed 's/:/ /'`
  fi

  if [[ "$quiet" == "y" ]]; then
    local crypt_args="${crypt_args} > /dev/null"
  fi

  if [[ -n "$cryptkey" ]]; then
    mount_key_file $key_file
  fi

  unlock ${crypt_params[@]} $crypt_args $key_file

  rm -rf /tmp/unlock $key_file
}
